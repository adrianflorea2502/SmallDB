@using ProiectBD.Utils;
@using ProiectBD.DB;
@using Microsoft.EntityFrameworkCore;
@{
    List<Game> links = (List<Game>)ViewData["lambda"];

    ViewData["Title"] = "valve List";
}

<html>
<head>
    <title>
        Our list of games:
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            background-color: #ffffff;
            background-repeat: no-repeat;
            background-position: top left;
            background-attachment: fixed;
        }

        h1 {
            font-family: Arial, sans-serif;
            color: #000000;
            background-color: #ffffff;
        }

        p {
            font-family: Georgia, serif;
            font-size: 14px;
            font-style: normal;
            font-weight: normal;
            color: #000000;
            background-color: #ffffff;
        }
    </style>
</head>
<body>
    <h1></h1>
    <div class="text-center">
        <h1 class="display-4">Valve Games:</h1>
        <p>

            @{
                proiectContext ctx = new proiectContext();
                bool needToGetOut = false;
                <hr>


                try
                {
                    if (links == null)
                    {
                        needToGetOut = true;
                        links = new List<Game> { new Game { } };
                    <p style="font-family:Arial">Come back later...</p>
                }
                else if (!needToGetOut)
                {
                    foreach (Game game in links)
                    {
                        <p style="font-family:Arial">
                            Game title: <br>
                            @game.GameName
                        </p>
                        <p style="font-family:Arial">
                            Release date: <br>
                            @game.ReleaseDate
                        </p>
                        <p style="font-family:Arial">
                            Developer: <br>@{
                                List<Developer> devs = ctx.Developers.FromSqlInterpolated($"exec GetDeveloperById {game.DeveloperId}").ToList();
                                if (devs?.Count == 0)
                                {
                                    devs = new List<Developer> { new Developer { Contact = "someEmail@some.domain", Country = "strangeCountry", DeveloperId = 420, Name = "JohnCena Games" } };
                                }
                                foreach (Developer dev in devs)
                                { @dev.Name;
                            }
                            }
                        </p>

                        <p style="font-family:Arial">
                            Publisher: <br>@{
                                List<Publisher> pubs = ctx.Publishers.FromSqlInterpolated($"exec GetPublisherById {game.PublisherId}").ToList();
                                if (pubs?.Count == 0)
                                {
                                    pubs = new List<Publisher> { new Publisher { Contact = "publisher@publish.com", Country = "USA", PublisherId = 404, Name = "PublisherNotFound" } };
                                }
                                foreach (Publisher pub in pubs)
                                { @pub.Name;
                            }
                            }
                        </p>
                        <p style="font-family:Arial">
                            Price: <br> @{ decimal fair = (decimal)game.Price; }
                            € @fair.ToString("0.00")
                        </p>
                        <p style="font-family:Arial">
                            Rating: <br>
                            @game.Rating
                        </p>
                        <p style="font-family:Arial">
                            Store page: <br>
                            <a href=@game.StorePage>Store Page Link</a>
                        </p>

                        <hr>
                        <br>
                    }
                }
            }
            catch { links = new List<Game> { new Game { } }; }
            }

            </p>
        </div>
    </body>
</html>
